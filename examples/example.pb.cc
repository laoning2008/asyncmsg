// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#include "example.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
template <typename>
PROTOBUF_CONSTEXPR add_req::add_req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.left_)*/ 0

  , /*decltype(_impl_.right_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct add_reqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR add_reqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~add_reqDefaultTypeInternal() {}
  union {
    add_req _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 add_reqDefaultTypeInternal _add_req_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR add_rsp::add_rsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct add_rspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR add_rspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~add_rspDefaultTypeInternal() {}
  union {
    add_rsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 add_rspDefaultTypeInternal _add_rsp_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR hello_push::hello_push(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hello_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct hello_pushDefaultTypeInternal {
  PROTOBUF_CONSTEXPR hello_pushDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~hello_pushDefaultTypeInternal() {}
  union {
    hello_push _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 hello_pushDefaultTypeInternal _hello_push_default_instance_;
static ::_pb::Metadata file_level_metadata_example_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_example_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_example_2eproto = nullptr;
const ::uint32_t TableStruct_example_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::add_req, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::add_req, _impl_.left_),
    PROTOBUF_FIELD_OFFSET(::add_req, _impl_.right_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::add_rsp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::add_rsp, _impl_.result_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::hello_push, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::hello_push, _impl_.hello_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::add_req)},
        { 10, -1, -1, sizeof(::add_rsp)},
        { 19, -1, -1, sizeof(::hello_push)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_add_req_default_instance_._instance,
    &::_add_rsp_default_instance_._instance,
    &::_hello_push_default_instance_._instance,
};
const char descriptor_table_protodef_example_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rexample.proto\"&\n\007add_req\022\014\n\004left\030\001 \001(\005"
    "\022\r\n\005right\030\002 \001(\005\"\031\n\007add_rsp\022\016\n\006result\030\001 \001"
    "(\005\"\033\n\nhello_push\022\r\n\005hello\030\001 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_example_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_example_2eproto = {
    false,
    false,
    119,
    descriptor_table_protodef_example_2eproto,
    "example.proto",
    &descriptor_table_example_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_example_2eproto::offsets,
    file_level_metadata_example_2eproto,
    file_level_enum_descriptors_example_2eproto,
    file_level_service_descriptors_example_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_example_2eproto_getter() {
  return &descriptor_table_example_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_example_2eproto(&descriptor_table_example_2eproto);
// ===================================================================

class add_req::_Internal {
 public:
};

add_req::add_req(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:add_req)
}
add_req::add_req(const add_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:add_req)
}

inline void add_req::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.left_) { 0 }

    , decltype(_impl_.right_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

add_req::~add_req() {
  // @@protoc_insertion_point(destructor:add_req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void add_req::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void add_req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void add_req::Clear() {
// @@protoc_insertion_point(message_clear_start:add_req)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.left_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.right_) -
      reinterpret_cast<char*>(&_impl_.left_)) + sizeof(_impl_.right_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* add_req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 left = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 right = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.right_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* add_req::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:add_req)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 left = 1;
  if (this->_internal_left() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_left(), target);
  }

  // int32 right = 2;
  if (this->_internal_right() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_right(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:add_req)
  return target;
}

::size_t add_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:add_req)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 left = 1;
  if (this->_internal_left() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_left());
  }

  // int32 right = 2;
  if (this->_internal_right() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_right());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData add_req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    add_req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*add_req::GetClassData() const { return &_class_data_; }


void add_req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<add_req*>(&to_msg);
  auto& from = static_cast<const add_req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:add_req)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_left() != 0) {
    _this->_internal_set_left(from._internal_left());
  }
  if (from._internal_right() != 0) {
    _this->_internal_set_right(from._internal_right());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void add_req::CopyFrom(const add_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:add_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool add_req::IsInitialized() const {
  return true;
}

void add_req::InternalSwap(add_req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(add_req, _impl_.right_)
      + sizeof(add_req::_impl_.right_)
      - PROTOBUF_FIELD_OFFSET(add_req, _impl_.left_)>(
          reinterpret_cast<char*>(&_impl_.left_),
          reinterpret_cast<char*>(&other->_impl_.left_));
}

::PROTOBUF_NAMESPACE_ID::Metadata add_req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2eproto_getter, &descriptor_table_example_2eproto_once,
      file_level_metadata_example_2eproto[0]);
}
// ===================================================================

class add_rsp::_Internal {
 public:
};

add_rsp::add_rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:add_rsp)
}
add_rsp::add_rsp(const add_rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:add_rsp)
}

inline void add_rsp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.result_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

add_rsp::~add_rsp() {
  // @@protoc_insertion_point(destructor:add_rsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void add_rsp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void add_rsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void add_rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:add_rsp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* add_rsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* add_rsp::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:add_rsp)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:add_rsp)
  return target;
}

::size_t add_rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:add_rsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData add_rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    add_rsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*add_rsp::GetClassData() const { return &_class_data_; }


void add_rsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<add_rsp*>(&to_msg);
  auto& from = static_cast<const add_rsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:add_rsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void add_rsp::CopyFrom(const add_rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:add_rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool add_rsp::IsInitialized() const {
  return true;
}

void add_rsp::InternalSwap(add_rsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata add_rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2eproto_getter, &descriptor_table_example_2eproto_once,
      file_level_metadata_example_2eproto[1]);
}
// ===================================================================

class hello_push::_Internal {
 public:
};

hello_push::hello_push(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hello_push)
}
hello_push::hello_push(const hello_push& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  hello_push* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hello_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hello_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hello_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hello().empty()) {
    _this->_impl_.hello_.Set(from._internal_hello(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:hello_push)
}

inline void hello_push::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.hello_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.hello_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hello_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

hello_push::~hello_push() {
  // @@protoc_insertion_point(destructor:hello_push)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void hello_push::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hello_.Destroy();
}

void hello_push::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void hello_push::Clear() {
// @@protoc_insertion_point(message_clear_start:hello_push)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hello_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* hello_push::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hello = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_hello();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "hello_push.hello"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* hello_push::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hello_push)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string hello = 1;
  if (!this->_internal_hello().empty()) {
    const std::string& _s = this->_internal_hello();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "hello_push.hello");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hello_push)
  return target;
}

::size_t hello_push::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hello_push)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hello = 1;
  if (!this->_internal_hello().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_hello());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData hello_push::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    hello_push::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*hello_push::GetClassData() const { return &_class_data_; }


void hello_push::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<hello_push*>(&to_msg);
  auto& from = static_cast<const hello_push&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hello_push)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hello().empty()) {
    _this->_internal_set_hello(from._internal_hello());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void hello_push::CopyFrom(const hello_push& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hello_push)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool hello_push::IsInitialized() const {
  return true;
}

void hello_push::InternalSwap(hello_push* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hello_, lhs_arena,
                                       &other->_impl_.hello_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata hello_push::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_example_2eproto_getter, &descriptor_table_example_2eproto_once,
      file_level_metadata_example_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::add_req*
Arena::CreateMaybeMessage< ::add_req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::add_req >(arena);
}
template<> PROTOBUF_NOINLINE ::add_rsp*
Arena::CreateMaybeMessage< ::add_rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::add_rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::hello_push*
Arena::CreateMaybeMessage< ::hello_push >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hello_push >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
